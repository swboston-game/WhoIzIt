//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Badges_Players_Player_Id", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Player), "Badges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Badge), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_GamePieces_Games_Game_Id", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Game), "GamePieces", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.GamePiece), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.GamePiece), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.GamePiece), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_GameStatus", "GameStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhoIzIt.Model.GameStatus), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_Players_Challenger_Id", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Player), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_Players_Opponent_Id", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Player), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_Players_PlayersMove_Id", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Player), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_Games_Players_Winner_Id", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoIzIt.Model.Player), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Game), true)]
[assembly: EdmRelationshipAttribute("Whozit.Model", "FK_QuestionsAsked_Games", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhoIzIt.Model.Game), "QuestionsAsked", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoIzIt.Model.Question), true)]

#endregion

namespace WhoIzIt.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WhozitEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WhozitEntities object using the connection string found in the 'WhozitEntities' section of the application configuration file.
        /// </summary>
        public WhozitEntities() : base("name=WhozitEntities", "WhozitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WhozitEntities object.
        /// </summary>
        public WhozitEntities(string connectionString) : base(connectionString, "WhozitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WhozitEntities object.
        /// </summary>
        public WhozitEntities(EntityConnection connection) : base(connection, "WhozitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Badge> Badges
        {
            get
            {
                if ((_Badges == null))
                {
                    _Badges = base.CreateObjectSet<Badge>("Badges");
                }
                return _Badges;
            }
        }
        private ObjectSet<Badge> _Badges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GamePiece> GamePieces
        {
            get
            {
                if ((_GamePieces == null))
                {
                    _GamePieces = base.CreateObjectSet<GamePiece>("GamePieces");
                }
                return _GamePieces;
            }
        }
        private ObjectSet<GamePiece> _GamePieces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameStatus> GameStatus1
        {
            get
            {
                if ((_GameStatus1 == null))
                {
                    _GameStatus1 = base.CreateObjectSet<GameStatus>("GameStatus1");
                }
                return _GameStatus1;
            }
        }
        private ObjectSet<GameStatus> _GameStatus1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CannedQuestion> CannedQuestions
        {
            get
            {
                if ((_CannedQuestions == null))
                {
                    _CannedQuestions = base.CreateObjectSet<CannedQuestion>("CannedQuestions");
                }
                return _CannedQuestions;
            }
        }
        private ObjectSet<CannedQuestion> _CannedQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Badges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBadges(Badge badge)
        {
            base.AddObject("Badges", badge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamePieces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamePieces(GamePiece gamePiece)
        {
            base.AddObject("GamePieces", gamePiece);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameStatus1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameStatus1(GameStatus gameStatus)
        {
            base.AddObject("GameStatus1", gameStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CannedQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCannedQuestions(CannedQuestion cannedQuestion)
        {
            base.AddObject("CannedQuestions", cannedQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="Badge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Badge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Badge object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="winsNeeded">Initial value of the WinsNeeded property.</param>
        /// <param name="streakNeeded">Initial value of the StreakNeeded property.</param>
        /// <param name="losesNeeded">Initial value of the LosesNeeded property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        public static Badge CreateBadge(global::System.Int32 id, global::System.Int32 winsNeeded, global::System.Int32 streakNeeded, global::System.Int32 losesNeeded, global::System.DateTime createdOn, global::System.DateTime updatedOn)
        {
            Badge badge = new Badge();
            badge.Id = id;
            badge.WinsNeeded = winsNeeded;
            badge.StreakNeeded = streakNeeded;
            badge.LosesNeeded = losesNeeded;
            badge.CreatedOn = createdOn;
            badge.UpdatedOn = updatedOn;
            return badge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WinsNeeded
        {
            get
            {
                return _WinsNeeded;
            }
            set
            {
                OnWinsNeededChanging(value);
                ReportPropertyChanging("WinsNeeded");
                _WinsNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinsNeeded");
                OnWinsNeededChanged();
            }
        }
        private global::System.Int32 _WinsNeeded;
        partial void OnWinsNeededChanging(global::System.Int32 value);
        partial void OnWinsNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StreakNeeded
        {
            get
            {
                return _StreakNeeded;
            }
            set
            {
                OnStreakNeededChanging(value);
                ReportPropertyChanging("StreakNeeded");
                _StreakNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StreakNeeded");
                OnStreakNeededChanged();
            }
        }
        private global::System.Int32 _StreakNeeded;
        partial void OnStreakNeededChanging(global::System.Int32 value);
        partial void OnStreakNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LosesNeeded
        {
            get
            {
                return _LosesNeeded;
            }
            set
            {
                OnLosesNeededChanging(value);
                ReportPropertyChanging("LosesNeeded");
                _LosesNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LosesNeeded");
                OnLosesNeededChanged();
            }
        }
        private global::System.Int32 _LosesNeeded;
        partial void OnLosesNeededChanging(global::System.Int32 value);
        partial void OnLosesNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerId;
        partial void OnPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="CannedQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CannedQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CannedQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        public static CannedQuestion CreateCannedQuestion(global::System.Int32 id, global::System.DateTime createdOn, global::System.DateTime updatedOn)
        {
            CannedQuestion cannedQuestion = new CannedQuestion();
            cannedQuestion.Id = id;
            cannedQuestion.CreatedOn = createdOn;
            cannedQuestion.UpdatedOn = updatedOn;
            return cannedQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="gameStatusId">Initial value of the GameStatusId property.</param>
        public static Game CreateGame(global::System.Int32 id, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int32 gameStatusId)
        {
            Game game = new Game();
            game.Id = id;
            game.CreatedOn = createdOn;
            game.UpdatedOn = updatedOn;
            game.GameStatusId = gameStatusId;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChallengerId
        {
            get
            {
                return _ChallengerId;
            }
            set
            {
                OnChallengerIdChanging(value);
                ReportPropertyChanging("ChallengerId");
                _ChallengerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChallengerId");
                OnChallengerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChallengerId;
        partial void OnChallengerIdChanging(Nullable<global::System.Int32> value);
        partial void OnChallengerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OpponentId
        {
            get
            {
                return _OpponentId;
            }
            set
            {
                OnOpponentIdChanging(value);
                ReportPropertyChanging("OpponentId");
                _OpponentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpponentId");
                OnOpponentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OpponentId;
        partial void OnOpponentIdChanging(Nullable<global::System.Int32> value);
        partial void OnOpponentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChallengerSelectionId
        {
            get
            {
                return _ChallengerSelectionId;
            }
            set
            {
                OnChallengerSelectionIdChanging(value);
                ReportPropertyChanging("ChallengerSelectionId");
                _ChallengerSelectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChallengerSelectionId");
                OnChallengerSelectionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChallengerSelectionId;
        partial void OnChallengerSelectionIdChanging(Nullable<global::System.Int32> value);
        partial void OnChallengerSelectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OpponenetSelectionId
        {
            get
            {
                return _OpponenetSelectionId;
            }
            set
            {
                OnOpponenetSelectionIdChanging(value);
                ReportPropertyChanging("OpponenetSelectionId");
                _OpponenetSelectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpponenetSelectionId");
                OnOpponenetSelectionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OpponenetSelectionId;
        partial void OnOpponenetSelectionIdChanging(Nullable<global::System.Int32> value);
        partial void OnOpponenetSelectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinnerId
        {
            get
            {
                return _WinnerId;
            }
            set
            {
                OnWinnerIdChanging(value);
                ReportPropertyChanging("WinnerId");
                _WinnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinnerId");
                OnWinnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WinnerId;
        partial void OnWinnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnWinnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayersMoveId
        {
            get
            {
                return _PlayersMoveId;
            }
            set
            {
                OnPlayersMoveIdChanging(value);
                ReportPropertyChanging("PlayersMoveId");
                _PlayersMoveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayersMoveId");
                OnPlayersMoveIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayersMoveId;
        partial void OnPlayersMoveIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayersMoveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameStatusId
        {
            get
            {
                return _GameStatusId;
            }
            set
            {
                OnGameStatusIdChanging(value);
                ReportPropertyChanging("GameStatusId");
                _GameStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameStatusId");
                OnGameStatusIdChanged();
            }
        }
        private global::System.Int32 _GameStatusId;
        partial void OnGameStatusIdChanging(global::System.Int32 value);
        partial void OnGameStatusIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_GamePieces_Games_Game_Id", "GamePieces")]
        public EntityCollection<GamePiece> GamePieces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GamePiece>("Whozit.Model.FK_GamePieces_Games_Game_Id", "GamePieces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GamePiece>("Whozit.Model.FK_GamePieces_Games_Game_Id", "GamePieces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces")]
        public GamePiece ChallengerPiece
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GamePiece> ChallengerPieceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_ChallengerSelection_Id", "GamePieces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces")]
        public GamePiece OpponentsPiece
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GamePiece> OpponentsPieceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GamePiece>("Whozit.Model.FK_Games_GamePieces_OpponenetSelection_Id", "GamePieces", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_GameStatus", "GameStatus")]
        public GameStatus GameStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameStatus>("Whozit.Model.FK_Games_GameStatus", "GameStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameStatus>("Whozit.Model.FK_Games_GameStatus", "GameStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameStatus> GameStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameStatus>("Whozit.Model.FK_Games_GameStatus", "GameStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameStatus>("Whozit.Model.FK_Games_GameStatus", "GameStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_Players_Challenger_Id", "Players")]
        public Player Challenger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Challenger_Id", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Challenger_Id", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> ChallengerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Challenger_Id", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Whozit.Model.FK_Games_Players_Challenger_Id", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_Players_Opponent_Id", "Players")]
        public Player Opponent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Opponent_Id", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Opponent_Id", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> OpponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Opponent_Id", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Whozit.Model.FK_Games_Players_Opponent_Id", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_Players_PlayersMove_Id", "Players")]
        public Player PlayersMove
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_PlayersMove_Id", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_PlayersMove_Id", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayersMoveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_PlayersMove_Id", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Whozit.Model.FK_Games_Players_PlayersMove_Id", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_Players_Winner_Id", "Players")]
        public Player Winner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Winner_Id", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Winner_Id", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> WinnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Whozit.Model.FK_Games_Players_Winner_Id", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Whozit.Model.FK_Games_Players_Winner_Id", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_QuestionsAsked_Games", "QuestionsAsked")]
        public EntityCollection<Question> QuestionsAskeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("Whozit.Model.FK_QuestionsAsked_Games", "QuestionsAsked");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("Whozit.Model.FK_QuestionsAsked_Games", "QuestionsAsked", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="GamePiece")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GamePiece : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GamePiece object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="discriminator">Initial value of the Discriminator property.</param>
        public static GamePiece CreateGamePiece(global::System.Int32 id, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.String discriminator)
        {
            GamePiece gamePiece = new GamePiece();
            gamePiece.Id = id;
            gamePiece.CreatedOn = createdOn;
            gamePiece.UpdatedOn = updatedOn;
            gamePiece.Discriminator = discriminator;
            return gamePiece;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacebookId
        {
            get
            {
                return _FacebookId;
            }
            set
            {
                OnFacebookIdChanging(value);
                ReportPropertyChanging("FacebookId");
                _FacebookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookId");
                OnFacebookIdChanged();
            }
        }
        private Nullable<global::System.Int64> _FacebookId;
        partial void OnFacebookIdChanging(Nullable<global::System.Int64> value);
        partial void OnFacebookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Discriminator
        {
            get
            {
                return _Discriminator;
            }
            set
            {
                OnDiscriminatorChanging(value);
                ReportPropertyChanging("Discriminator");
                _Discriminator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Discriminator");
                OnDiscriminatorChanged();
            }
        }
        private global::System.String _Discriminator;
        partial void OnDiscriminatorChanging(global::System.String value);
        partial void OnDiscriminatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="GameStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="modifyDateTime">Initial value of the ModifyDateTime property.</param>
        public static GameStatus CreateGameStatus(global::System.Int32 id, global::System.String status, global::System.DateTime modifyDateTime)
        {
            GameStatus gameStatus = new GameStatus();
            gameStatus.Id = id;
            gameStatus.Status = status;
            gameStatus.ModifyDateTime = modifyDateTime;
            return gameStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifyDateTime
        {
            get
            {
                return _ModifyDateTime;
            }
            set
            {
                OnModifyDateTimeChanging(value);
                ReportPropertyChanging("ModifyDateTime");
                _ModifyDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDateTime");
                OnModifyDateTimeChanged();
            }
        }
        private global::System.DateTime _ModifyDateTime;
        partial void OnModifyDateTimeChanging(global::System.DateTime value);
        partial void OnModifyDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_GameStatus", "Games")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("Whozit.Model.FK_Games_GameStatus", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("Whozit.Model.FK_Games_GameStatus", "Games", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="streak">Initial value of the Streak property.</param>
        /// <param name="wins">Initial value of the Wins property.</param>
        /// <param name="loses">Initial value of the Loses property.</param>
        /// <param name="totalPoints">Initial value of the TotalPoints property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        public static Player CreatePlayer(global::System.Int32 id, global::System.Int32 streak, global::System.Int32 wins, global::System.Int32 loses, global::System.Int32 totalPoints, global::System.DateTime createdOn, global::System.DateTime updatedOn)
        {
            Player player = new Player();
            player.Id = id;
            player.Streak = streak;
            player.Wins = wins;
            player.Loses = loses;
            player.TotalPoints = totalPoints;
            player.CreatedOn = createdOn;
            player.UpdatedOn = updatedOn;
            return player;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FaceBookId
        {
            get
            {
                return _FaceBookId;
            }
            set
            {
                OnFaceBookIdChanging(value);
                ReportPropertyChanging("FaceBookId");
                _FaceBookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FaceBookId");
                OnFaceBookIdChanged();
            }
        }
        private Nullable<global::System.Int64> _FaceBookId;
        partial void OnFaceBookIdChanging(Nullable<global::System.Int64> value);
        partial void OnFaceBookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Streak
        {
            get
            {
                return _Streak;
            }
            set
            {
                OnStreakChanging(value);
                ReportPropertyChanging("Streak");
                _Streak = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Streak");
                OnStreakChanged();
            }
        }
        private global::System.Int32 _Streak;
        partial void OnStreakChanging(global::System.Int32 value);
        partial void OnStreakChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Wins
        {
            get
            {
                return _Wins;
            }
            set
            {
                OnWinsChanging(value);
                ReportPropertyChanging("Wins");
                _Wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wins");
                OnWinsChanged();
            }
        }
        private global::System.Int32 _Wins;
        partial void OnWinsChanging(global::System.Int32 value);
        partial void OnWinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Loses
        {
            get
            {
                return _Loses;
            }
            set
            {
                OnLosesChanging(value);
                ReportPropertyChanging("Loses");
                _Loses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Loses");
                OnLosesChanged();
            }
        }
        private global::System.Int32 _Loses;
        partial void OnLosesChanging(global::System.Int32 value);
        partial void OnLosesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private global::System.Int32 _TotalPoints;
        partial void OnTotalPointsChanging(global::System.Int32 value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Badges_Players_Player_Id", "Badges")]
        public EntityCollection<Badge> Badges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Badge>("Whozit.Model.FK_Badges_Players_Player_Id", "Badges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Badge>("Whozit.Model.FK_Badges_Players_Player_Id", "Badges", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_Games_Players_Challenger_Id", "Games")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("Whozit.Model.FK_Games_Players_Challenger_Id", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("Whozit.Model.FK_Games_Players_Challenger_Id", "Games", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Whozit.Model", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gameID">Initial value of the GameID property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.Int32 gameID, global::System.DateTime createdOn, global::System.DateTime updatedOn)
        {
            Question question = new Question();
            question.Id = id;
            question.GameID = gameID;
            question.CreatedOn = createdOn;
            question.UpdatedOn = updatedOn;
            return question;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameID
        {
            get
            {
                return _GameID;
            }
            set
            {
                OnGameIDChanging(value);
                ReportPropertyChanging("GameID");
                _GameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameID");
                OnGameIDChanged();
            }
        }
        private global::System.Int32 _GameID;
        partial void OnGameIDChanging(global::System.Int32 value);
        partial void OnGameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Whozit.Model", "FK_QuestionsAsked_Games", "Games")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Whozit.Model.FK_QuestionsAsked_Games", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Whozit.Model.FK_QuestionsAsked_Games", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("Whozit.Model.FK_QuestionsAsked_Games", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("Whozit.Model.FK_QuestionsAsked_Games", "Games", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
